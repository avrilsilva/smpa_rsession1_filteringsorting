---
title: "In Class Exercises - Sorting and Filtering"
author: "Avril Silva"
date: "`r format(Sys.time(), '%B %d, %Y')`"
format:
  html:
    self-contained: true
    toc: true
    toc-location: left
---

## Setup and Loading Data

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)

# Load the packages we'll need
# Remember, think of this like packing for our trip
# (We don't take the whole closet, only what we need)
library(tidyverse)
library(lubridate)

```

Run this line below to load the data for this assignment. It will load a dataframe called "impeach," containing U.S. House Democrats and whether they supported the first impeachment of Pres. Trump, along with when they announced such support.

```{r}

impeach <- read_csv("https://docs.google.com/spreadsheets/d/e/2PACX-1vRh8d5JaDqBtByzNw2JZF3idaACobDhhk-p7chJoktA0HawELHFOvjQOqCpzGA4MGONvPlR7GASqW-K/pub?gid=1765341510&single=true&output=csv")


```

Let's see what we have:

```{r}

impeach


```

## Exercise Questions

*For the questions below, write your R code to return the requested records in the code chunk provided.*

1) The column "for_impeachment" indicates whether the member has publicly called for an impeachment inquiry. Filter to return only the ones where the answer is NO.

```{r}

impeach %>% 
  filter(for_impeachment == "NO")

# For this question, I wanted to use the %>% command to hopefully simplify the commands in order to build off of this command and set it up well for future questions. 




```

2) Filter to return only results where a member is both against impeachment, and comes from a district that President Trump won in 2016 (which is noted in the "p16winningparty" column).

```{r}

impeach %>% 
  filter(for_impeachment == "NO", p16winningparty == "R")

# Looking back at the notes from class on how to add multiple filters for one table, I added the comma to separate the different filters and used the '==' to select just the Republicans from 2016. 




```

3) Filter for only results where a member is against impeachment, comes from a district that President Trump won in 2016 (which is noted in the "p16winningparty" column), and also comes from a district that Mitt Romney won in 2012 ("p12winningparty").

```{r}

impeach %>% 
  filter(for_impeachment == "NO", p16winningparty == "R", p12winningparty == "R")

# Similar to the last question, I selected only the Republicans, delineated by the 'R', and used the same filters, building off my string of code that I have from the previous questions. 



```

4) Filter for only results from September 2019 where a member is a YES for impeachment.

```{r}

impeach %>% 
  filter(for_impeachment == "YES", date_month == 9, date_year == 2019)

# Like the first question, I used the %>% (pipe) command to select the data set and the filter I wanted to use, this time selecting those who agree with the impeachment. Then, I used the date_month and date_year columns to only select those from September 2019. I had to look back at this question and find that there were indeed values for those columns other than the NAs that populated it. 


```

5) Filter for only results where a member is a YES for impeachment and is from a district where Clinton won more than 70 percent of the vote in 2016 (found in column "clinton_percent").

```{r}

impeach %>% 
  filter(for_impeachment == "YES", clinton_percent > 70)

# I used the comma to build off of the initial filter command like I did for the second question and looked at the notes from class to find the greater than symbol to designate more than 70 percent for that column. 



```

6) Sort the entire dataframe based on the percentage of a district that has a
bachelor's degree or higher ("pct_bachelors"), from lowest to highest.

```{r}

impeach %>%
  arrange(pct_bachelors)

# For this question, I was a little confused between the 'select' and 'arrange' commands, but once I realized that arrange was used for sorting, I was able to do it successfully from lowest to highest for the entire dataframe. 



```

7) Sort the just those who are NO on impeachment based on the percentage of a district that has a bachelor's degree or higher ("pct_bachelors"), from lowest to highest.

```{r}

impeach %>% 
  filter(for_impeachment == "NO") %>%
  arrange(pct_bachelors)

# I like how this type of coding can become more intuitive over time. I looked back at the code that I created earlier and added the sorting for the bachelor's degrees onto it using the pipe command to create one large line of code. 



```

8) Sort the just those who are NO on impeachment based on the percentage of a district that has a bachelor's degree or higher ("pct_bachelors"), from lowest to highest.

Then filter those records by only those whose bachelor's percentage is below the national average (found in the "pct_bachelors_compared_to_national" column).

```{r}

impeach %>% 
  filter(for_impeachment == "NO") %>%
  arrange(pct_bachelors) %>%
  filter(pct_bachelors_compared_to_national == "BELOW")

# Using the code from the last question, I added the additional filter for those whose bachelor's percentage is below the national average at the end to ensure I had all the data points I needed and did it in the correct order. 


```

9) Filter for only members from New Jersey who are NO on impeachment.

```{r}

impeach %>% 
  filter(state == "NJ") %>% 
  filter(for_impeachment == "NO")

# For this question, I had to look at what column designated the state that a House member was from and how New Jersey was represented (that being NJ) and then out of those filtering out only the ones that are against impeachment. The order here was super important to me to note before completing the line of code to ensure clarity.



```

10) Filter for those who were YES on impeachment, with a declared date prior to 2019. So only those with dates before 2019. Then sort those so that the highest Clinton vote percentages are at the top.

```{r}

impeach %>%
  filter(for_impeachment == "YES", date_year < 2019) %>% 
  arrange(desc(clinton_percent))

# This question was a little on the trickier side but I think I got it. I first filtered the dataset for the impeachment, then only selected those with a declared date prior to 2019 by using the date_year category. From there, I made sure to do the descending command along with the arrange command in order to sort it by the highest Clinton cote percentages at the top. 



```
